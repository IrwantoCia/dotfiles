#!/usr/bin/env bash

if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(find ~/Documents/personal/bacod.nvim \
      ~/Documents/personal/duckstation/Applications \
      ~/Documents/crimson/gama-cms-web-app  \
      ~/Documents/crimson/gama-event-backend-app  \
      ~/Documents/crimson/gama-backend-utility  \
      ~/Documents/crimson/gama-data-access  \
      ~/Documents/crimson/gama-backend-app  \
      ~/Documents/crimson/gama-cron-job  \
      ~/Documents/crimson/gambit-api  \
      ~/Documents/crimson/gambit-api/api  \
      ~/Documents/crimson/gambit-api/api-bo  \
      ~/Documents/crimson/gambit-api/packages/utility  \
      ~/Documents/crimson/gambit-api/packages/data-access  \
      ~/Documents/crimson/crimson.com  \
      ~/Documents/personal/irwantocia.com  \
      ~/Documents/personal/belajar_c  \
      ~/Documents/personal/livestreaming-backend  \
      -mindepth 0 -maxdepth 0 -type d | fzf)
     # ~/Documents/personal/upwork/weddingserv  \
     # ~/Documents/personal/upwork/weddingserv_backend \
     # ~/Documents/personal/upwork/Admin-Weddingserv \
     # ~/Documents/crimson/analyzer  \
     # ~/Documents/crimson/logger  \
     # ~/Documents/crimson/test  \
     # ~/Downloads/aider/  \
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -s $selected_name -c $selected
    exit 0
fi

if ! tmux has-session -t=$selected_name 2> /dev/null; then
    tmux new-session -ds $selected_name -c $selected
fi

echo $selected_name
if ! { [ "$TERM" = "screen" ] && [ -n "$TMUX" ]; } then
  tmux attach-session -t $selected_name
else
  tmux switch-client -t $selected_name
fi

